"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/calculations.js":
/*!***********************************!*\
  !*** ./src/utils/calculations.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateBlowerCapacity: function() { return /* binding */ calculateBlowerCapacity; },\n/* harmony export */   calculateCarbonFilterDiameter: function() { return /* binding */ calculateCarbonFilterDiameter; },\n/* harmony export */   calculateDiffuserCoursePiece: function() { return /* binding */ calculateDiffuserCoursePiece; },\n/* harmony export */   calculateDiffuserFinePiece: function() { return /* binding */ calculateDiffuserFinePiece; },\n/* harmony export */   calculateEquivalentTank: function() { return /* binding */ calculateEquivalentTank; },\n/* harmony export */   calculateFlowMeterSize: function() { return /* binding */ calculateFlowMeterSize; },\n/* harmony export */   calculateFlowRate: function() { return /* binding */ calculateFlowRate; },\n/* harmony export */   calculateMBBRMedia: function() { return /* binding */ calculateMBBRMedia; },\n/* harmony export */   calculateMBBRTankVolume: function() { return /* binding */ calculateMBBRTankVolume; },\n/* harmony export */   calculateMGFCapacity: function() { return /* binding */ calculateMGFCapacity; },\n/* harmony export */   calculateMGFDiameter: function() { return /* binding */ calculateMGFDiameter; },\n/* harmony export */   calculateNitrogenRemoval: function() { return /* binding */ calculateNitrogenRemoval; },\n/* harmony export */   calculateSludgeHoldingTank: function() { return /* binding */ calculateSludgeHoldingTank; },\n/* harmony export */   calculateTotalCost: function() { return /* binding */ calculateTotalCost; },\n/* harmony export */   calculationOzonatorFlowRate: function() { return /* binding */ calculationOzonatorFlowRate; },\n/* harmony export */   calculationTubeDeckMediaNumber: function() { return /* binding */ calculationTubeDeckMediaNumber; },\n/* harmony export */   calculationUVSystemFlowRate: function() { return /* binding */ calculationUVSystemFlowRate; },\n/* harmony export */   calculationUltraFiltrationSystemFlowRate: function() { return /* binding */ calculationUltraFiltrationSystemFlowRate; },\n/* harmony export */   initializeDashboard: function() { return /* binding */ initializeDashboard; },\n/* harmony export */   updateDynamicCapacities: function() { return /* binding */ updateDynamicCapacities; }\n/* harmony export */ });\n// Helper function to ensure a number is not NaN, replacing with 0 if it is\nconst ensureNumber = (value)=>isNaN(value) ? 0 : value;\n// Function to save equipment data to local storage\nconst saveEquipmentData = (equipmentData)=>{\n    localStorage.setItem(\"equipmentData\", JSON.stringify(equipmentData));\n};\n// Function to load equipment data from local storage\nconst loadEquipmentData = ()=>{\n    const data = localStorage.getItem(\"equipmentData\");\n    return data ? JSON.parse(data) : {};\n};\nfunction calculateTotalCost(equipmentData) {\n    return Object.values(equipmentData).reduce((total, equipment)=>total + equipment.totalPrice, 0);\n}\nfunction calculateFlowRate(plantCapacity) {\n    return plantCapacity / 20;\n}\nfunction calculateEquivalentTank(flowRate) {\n    return flowRate * 8;\n}\nfunction calculateMBBRTankVolume(BOD, plantCapacity) {\n    let depth = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 4;\n    return BOD / 1000 * plantCapacity * 2.5 / 0.89;\n}\nfunction calculateNitrogenRemoval(Nitrogen, plantCapacity) {\n    let depth = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 4;\n    return Nitrogen / 1000 * plantCapacity * 4.3 / 0.89;\n}\nfunction calculateSludgeHoldingTank(plantCapacity, BOD, TSS) {\n    const sludgeHolder = plantCapacity * (BOD * 0.15 + TSS * 0.6) / 100000;\n    return sludgeHolder * 4;\n}\nfunction calculateMBBRMedia(BOD, plantCapacity) {\n    return BOD * plantCapacity / 4000;\n}\nfunction calculateBlowerCapacity(equivalentTank, MBBRTankVolume, nitrogenRemoval, sludgeHoldingTank) {\n    return equivalentTank * 0.6 + MBBRTankVolume + nitrogenRemoval + sludgeHoldingTank * 0.6;\n}\nfunction calculateDiffuserCoursePiece(equivalentTank, sludgeHoldingTank) {\n    return equivalentTank * 0.6 / 3 + sludgeHoldingTank * 0.6 / 3;\n}\nfunction calculateDiffuserFinePiece(MBBRTankVolume, nitrogenRemoval) {\n    return (MBBRTankVolume + nitrogenRemoval) / 5;\n}\nfunction calculateMGFCapacity(plantCapacity) {\n    return plantCapacity / (16 * 12);\n}\nfunction calculateMGFDiameter(mgfCapacity) {\n    return Math.sqrt(mgfCapacity * 4 / Math.PI) * 1000; // Multiply the result by 1000\n}\nfunction calculateCarbonFilterDiameter(mgfCapacity) {\n    return Math.sqrt(mgfCapacity * 4 / Math.PI) * 1000; // Multiply the result by 1000\n}\nfunction calculateFlowMeterSize(waterFlowRate) {\n    return Math.sqrt(waterFlowRate * 4 / (3600 * 1.5 * 3.14)) * 1000;\n}\nfunction calculationUVSystemFlowRate(plantCapacity) {\n    return plantCapacity / 20;\n}\nfunction calculationOzonatorFlowRate(plantCapacity) {\n    return plantCapacity * 5 / 20;\n}\nfunction calculationUltraFiltrationSystemFlowRate(plantCapacity) {\n    return plantCapacity / 20;\n}\nfunction calculationTubeDeckMediaNumber(plantCapacity) {\n    return plantCapacity * 22.5;\n}\nfunction updateDynamicCapacities(plantData, equipmentData) {\n    const updatedEquipmentData = {\n        ...equipmentData\n    };\n    const flowRate = calculateFlowRate(plantData.capacity);\n    const equivalentTank = calculateEquivalentTank(flowRate);\n    const MBBRTankVolume = calculateMBBRTankVolume(plantData.BOD, plantData.capacity, 4);\n    const nitrogenRemoval = calculateNitrogenRemoval(plantData.Nitrogen, plantData.capacity, 4);\n    const sludgeHoldingTank = calculateSludgeHoldingTank(plantData.capacity, plantData.BOD, plantData.TSS);\n    const MBBRMedia = calculateMBBRMedia(plantData.BOD, plantData.capacity);\n    const blowerCapacity = calculateBlowerCapacity(equivalentTank, MBBRTankVolume, nitrogenRemoval, sludgeHoldingTank);\n    const diffuserCoursePiece = calculateDiffuserCoursePiece(equivalentTank, sludgeHoldingTank);\n    const diffuserFinePiece = calculateDiffuserFinePiece(MBBRTankVolume, nitrogenRemoval);\n    const mgfCapacity = calculateMGFCapacity(plantData.capacity);\n    const mgfDiameter = calculateMGFDiameter(mgfCapacity);\n    const carbonFilterDiameter = calculateMGFDiameter(mgfCapacity);\n    const UVSystemFlow = calculationUVSystemFlowRate(plantData.capacity);\n    const OzonatorFlow = calculationOzonatorFlowRate(plantData.capacity);\n    const UltraFiltrationSystemFlow = calculationUltraFiltrationSystemFlowRate(plantData.capacity);\n    const TubeDeck = calculationTubeDeckMediaNumber(plantData.capacity);\n    const flowMeterSize = calculateFlowMeterSize(flowRate);\n    if (updatedEquipmentData[\"raw-sewage\"]) updatedEquipmentData[\"raw-sewage\"].capacity = flowRate;\n    if (updatedEquipmentData[\"blower\"]) updatedEquipmentData[\"blower\"].capacity = blowerCapacity;\n    if (updatedEquipmentData[\"sludge-pump\"]) updatedEquipmentData[\"sludge-pump\"].capacity = flowRate;\n    if (updatedEquipmentData[\"filter-pump\"]) updatedEquipmentData[\"filter-pump\"].capacity = plantData.capacity / 16;\n    if (updatedEquipmentData[\"multi-grade-filter\"]) updatedEquipmentData[\"multi-grade-filter\"].diameter = mgfDiameter;\n    if (updatedEquipmentData[\"carbon-filter\"]) updatedEquipmentData[\"carbon-filter\"].diameter = carbonFilterDiameter;\n    if (updatedEquipmentData[\"tube-media\"]) updatedEquipmentData[\"tube-media\"].capacity = TubeDeck;\n    if (updatedEquipmentData[\"mbbr-media\"]) updatedEquipmentData[\"mbbr-media\"].Volume = MBBRMedia;\n    if (updatedEquipmentData[\"diffuser-course\"]) updatedEquipmentData[\"diffuser-course\"].Piece = diffuserCoursePiece;\n    if (updatedEquipmentData[\"diffuser-fine\"]) updatedEquipmentData[\"diffuser-fine\"].Piece = diffuserFinePiece;\n    if (updatedEquipmentData[\"flow-meter\"]) updatedEquipmentData[\"flow-meter\"].size = flowMeterSize;\n    if (updatedEquipmentData[\"uv-system\"]) updatedEquipmentData[\"uv-system\"].Flow = UVSystemFlow;\n    if (updatedEquipmentData[\"Ozonator\"]) updatedEquipmentData[\"Ozonator\"].Flow = OzonatorFlow;\n    if (updatedEquipmentData[\"ultra-filtration\"]) updatedEquipmentData[\"ultra-filtration\"].Flow = UltraFiltrationSystemFlow;\n    if (updatedEquipmentData[\"piping\"]) updatedEquipmentData[\"piping\"].totalPrice = 80000;\n    if (updatedEquipmentData[\"cable\"]) updatedEquipmentData[\"cable\"].totalPrice = 35000;\n    if (updatedEquipmentData[\"panel\"]) updatedEquipmentData[\"panel\"].totalPrice = 70000;\n    if (updatedEquipmentData[\"installation\"]) updatedEquipmentData[\"installation\"].totalPrice = 40000;\n    if (updatedEquipmentData[\"commissioning\"]) updatedEquipmentData[\"commissioning\"].totalPrice = 70000;\n    Object.keys(updatedEquipmentData).forEach((key)=>{\n        const equipment = updatedEquipmentData[key];\n        // Initialize totalPrice to zero\n        equipment.totalPrice = 0;\n        // Calculate total price based on cost factors\n        const capacityCost = ensureNumber(equipment.costPerCapacity) * ensureNumber(equipment.quantity);\n        const volumeCost = ensureNumber(equipment.costPerVolume) * ensureNumber(equipment.Volume || 0);\n        const flowCost = ensureNumber(equipment.costPerFlow) * ensureNumber(equipment.Flow || 0);\n        const pieceCost = ensureNumber(equipment.costPerPiece) * ensureNumber(equipment.Piece || 0);\n        const diameterCost = ensureNumber(equipment.costPerDiameter) * ensureNumber(equipment.diameter || 0);\n        const sizeCost = ensureNumber(equipment.costPerSize) * ensureNumber(equipment.size || 0);\n        const quantityCost = ensureNumber(equipment.totalPrice) * ensureNumber(equipment.quantity || 0);\n        // Sum up all costs to get the totalPrice\n        equipment.totalPrice += capacityCost + volumeCost + flowCost + pieceCost + diameterCost + sizeCost + quantityCost;\n        // Add additional costs based on specific calculations\n        if (key === \"raw-sewage\") {\n            equipment.totalPrice += flowRate * ensureNumber(equipment.costPerCapacity);\n        }\n        if (key === \"blower\") {\n            equipment.totalPrice += blowerCapacity * ensureNumber(equipment.costPerCapacity);\n        }\n        if (key === \"sludge-pump\") {\n            equipment.totalPrice += flowRate * ensureNumber(equipment.costPerCapacity);\n        }\n        if (key === \"filter-pump\") {\n            equipment.totalPrice += plantData.capacity / 16 * ensureNumber(equipment.costPerCapacity);\n        }\n        if (key === \"multi-grade-filter\") {\n            equipment.totalPrice += mgfCapacity * ensureNumber(equipment.costPerDiameter);\n        }\n        if (key === \"Carbon Filter\") {\n            equipment.totalPrice += mgfDiameter * ensureNumber(equipment.costPerDiameter);\n        }\n        if (key === \"tube-media\") {\n            equipment.totalPrice += TubeDeck * ensureNumber(equipment.costPerCapacity);\n        }\n        if (key === \"mbbr-media\") {\n            equipment.totalPrice += MBBRMedia * ensureNumber(equipment.costPerVolume);\n        }\n        if (key === \"diffuser-course\") {\n            equipment.totalPrice += diffuserCoursePiece * ensureNumber(equipment.costPerPiece);\n        }\n        if (key === \"diffuser-fine\") {\n            equipment.totalPrice += diffuserFinePiece * ensureNumber(equipment.costPerPiece);\n        }\n        if (key === \"flow-meter\") {\n            equipment.totalPrice += flowMeterSize * ensureNumber(equipment.costPerSize);\n        }\n        if (key === \"uv-system\") {\n            equipment.totalPrice += UVSystemFlow * equipment.costPerFlow;\n        }\n        if (key === \"Ozonator\") {\n            equipment.totalPrice += OzonatorFlow * equipment.costPerFlow;\n        }\n        if (key === \"ultra-filtration\") {\n            equipment.totalPrice += UltraFiltrationSystemFlow * equipment.costPerFlow;\n            if (key === \"piping\") {\n                equipment.totalPrice += 80000;\n            }\n        }\n    });\n    // Save updated equipment data to local storage\n    saveEquipmentData(updatedEquipmentData);\n    return updatedEquipmentData;\n}\n// Function to initialize the dashboard\nfunction initializeDashboard() {\n    const equipmentData = loadEquipmentData();\n// Now use equipmentData to populate your dashboard\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9jYWxjdWxhdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwyRUFBMkU7QUFDM0UsTUFBTUEsZUFBZSxDQUFDQyxRQUFXQyxNQUFNRCxTQUFTLElBQUlBO0FBRXBELG1EQUFtRDtBQUNuRCxNQUFNRSxvQkFBb0IsQ0FBQ0M7SUFDekJDLGFBQWFDLE9BQU8sQ0FBQyxpQkFBaUJDLEtBQUtDLFNBQVMsQ0FBQ0o7QUFDdkQ7QUFFQSxxREFBcUQ7QUFDckQsTUFBTUssb0JBQW9CO0lBQ3hCLE1BQU1DLE9BQU9MLGFBQWFNLE9BQU8sQ0FBQztJQUNsQyxPQUFPRCxPQUFPSCxLQUFLSyxLQUFLLENBQUNGLFFBQVEsQ0FBQztBQUNwQztBQUNPLFNBQVNHLG1CQUFtQlQsYUFBYTtJQUM5QyxPQUFPVSxPQUFPQyxNQUFNLENBQUNYLGVBQWVZLE1BQU0sQ0FBQyxDQUFDQyxPQUFPQyxZQUFjRCxRQUFRQyxVQUFVQyxVQUFVLEVBQUU7QUFDakc7QUFFTyxTQUFTQyxrQkFBa0JDLGFBQWE7SUFDN0MsT0FBT0EsZ0JBQWdCO0FBQ3pCO0FBRU8sU0FBU0Msd0JBQXdCQyxRQUFRO0lBQzlDLE9BQU9BLFdBQVc7QUFDcEI7QUFFTyxTQUFTQyx3QkFBd0JDLEdBQUcsRUFBRUosYUFBYTtRQUFFSyxRQUFBQSxpRUFBUTtJQUNsRSxPQUFPLE1BQVEsT0FBUUwsZ0JBQWdCLE1BQU87QUFDaEQ7QUFFTyxTQUFTTSx5QkFBeUJDLFFBQVEsRUFBRVAsYUFBYTtRQUFFSyxRQUFBQSxpRUFBUTtJQUN4RSxPQUFPLFdBQWEsT0FBUUwsZ0JBQWdCLE1BQU87QUFDckQ7QUFFTyxTQUFTUSwyQkFBMkJSLGFBQWEsRUFBRUksR0FBRyxFQUFFSyxHQUFHO0lBQ2hFLE1BQU1DLGVBQWUsZ0JBQWtCTixDQUFBQSxNQUFNLE9BQU9LLE1BQU0sR0FBRSxJQUFNO0lBQ2xFLE9BQU9DLGVBQWU7QUFDeEI7QUFFTyxT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QUNuRjtRQUNBLElBQUlULFFBQVEsaUJBQWlCO1lBQzNCekQsVUFBVUMsVUFBVSxJQUFJeUMsb0JBQW9CNUQsYUFBYWtCLFVBQVVrRSxZQUFZO1FBQ2pGO1FBQ0EsSUFBSVQsUUFBUSxjQUFjO1lBQ3hCekQsVUFBVUMsVUFBVSxJQUFJZ0QsZ0JBQWdCbkUsYUFBYWtCLFVBQVVzRSxXQUFXO1FBQzVFO1FBQ0EsSUFBSWIsUUFBUSxhQUFhO1lBQ3ZCekQsVUFBVUMsVUFBVSxJQUFJNEMsZUFBZ0I3QyxVQUFVZ0UsV0FBVztRQUMvRDtRQUNBLElBQUlQLFFBQVEsWUFBWTtZQUN0QnpELFVBQVVDLFVBQVUsSUFBSTZDLGVBQWdCOUMsVUFBVWdFLFdBQVc7UUFDL0Q7UUFDQSxJQUFJUCxRQUFRLG9CQUFvQjtZQUM5QnpELFVBQVVDLFVBQVUsSUFBSThDLDRCQUE2Qi9DLFVBQVVnRSxXQUFXO1lBQzVFLElBQUlQLFFBQVEsVUFBVTtnQkFDcEJ6RCxVQUFVQyxVQUFVLElBQUk7WUFDMUI7UUFDRjtJQUVGO0lBQ0MsK0NBQStDO0lBQy9DaEIsa0JBQWtCb0Q7SUFDbkIsT0FBT0E7QUFDVDtBQUNBLHVDQUF1QztBQUNoQyxTQUFTbUM7SUFDZCxNQUFNdEYsZ0JBQWdCSztBQUN0QixtREFBbUQ7QUFDckQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3V0aWxzL2NhbGN1bGF0aW9ucy5qcz9jYjczIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEhlbHBlciBmdW5jdGlvbiB0byBlbnN1cmUgYSBudW1iZXIgaXMgbm90IE5hTiwgcmVwbGFjaW5nIHdpdGggMCBpZiBpdCBpc1xyXG5jb25zdCBlbnN1cmVOdW1iZXIgPSAodmFsdWUpID0+IChpc05hTih2YWx1ZSkgPyAwIDogdmFsdWUpXHJcblxyXG4vLyBGdW5jdGlvbiB0byBzYXZlIGVxdWlwbWVudCBkYXRhIHRvIGxvY2FsIHN0b3JhZ2VcclxuY29uc3Qgc2F2ZUVxdWlwbWVudERhdGEgPSAoZXF1aXBtZW50RGF0YSkgPT4ge1xyXG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdlcXVpcG1lbnREYXRhJywgSlNPTi5zdHJpbmdpZnkoZXF1aXBtZW50RGF0YSkpO1xyXG59O1xyXG5cclxuLy8gRnVuY3Rpb24gdG8gbG9hZCBlcXVpcG1lbnQgZGF0YSBmcm9tIGxvY2FsIHN0b3JhZ2VcclxuY29uc3QgbG9hZEVxdWlwbWVudERhdGEgPSAoKSA9PiB7XHJcbiAgY29uc3QgZGF0YSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdlcXVpcG1lbnREYXRhJyk7XHJcbiAgcmV0dXJuIGRhdGEgPyBKU09OLnBhcnNlKGRhdGEpIDoge307XHJcbn07XHJcbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVUb3RhbENvc3QoZXF1aXBtZW50RGF0YSkge1xyXG4gIHJldHVybiBPYmplY3QudmFsdWVzKGVxdWlwbWVudERhdGEpLnJlZHVjZSgodG90YWwsIGVxdWlwbWVudCkgPT4gdG90YWwgKyBlcXVpcG1lbnQudG90YWxQcmljZSwgMClcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZUZsb3dSYXRlKHBsYW50Q2FwYWNpdHkpIHtcclxuICByZXR1cm4gcGxhbnRDYXBhY2l0eSAvIDIwXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVFcXVpdmFsZW50VGFuayhmbG93UmF0ZSkge1xyXG4gIHJldHVybiBmbG93UmF0ZSAqIDhcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZU1CQlJUYW5rVm9sdW1lKEJPRCwgcGxhbnRDYXBhY2l0eSwgZGVwdGggPSA0KSB7XHJcbiAgcmV0dXJuICgoQk9EIC8gMTAwMCkgKiBwbGFudENhcGFjaXR5ICogMi41KSAvIDAuODlcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZU5pdHJvZ2VuUmVtb3ZhbChOaXRyb2dlbiwgcGxhbnRDYXBhY2l0eSwgZGVwdGggPSA0KSB7XHJcbiAgcmV0dXJuICgoTml0cm9nZW4gLyAxMDAwKSAqIHBsYW50Q2FwYWNpdHkgKiA0LjMpIC8gMC44OVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2FsY3VsYXRlU2x1ZGdlSG9sZGluZ1RhbmsocGxhbnRDYXBhY2l0eSwgQk9ELCBUU1MpIHtcclxuICBjb25zdCBzbHVkZ2VIb2xkZXIgPSAocGxhbnRDYXBhY2l0eSAqIChCT0QgKiAwLjE1ICsgVFNTICogMC42KSkgLyAxMDAwMDBcclxuICByZXR1cm4gc2x1ZGdlSG9sZGVyICogNFxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2FsY3VsYXRlTUJCUk1lZGlhKEJPRCwgcGxhbnRDYXBhY2l0eSkge1xyXG4gIHJldHVybiAoQk9EICogcGxhbnRDYXBhY2l0eSkgLyA0MDAwXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVCbG93ZXJDYXBhY2l0eShlcXVpdmFsZW50VGFuaywgTUJCUlRhbmtWb2x1bWUsIG5pdHJvZ2VuUmVtb3ZhbCwgc2x1ZGdlSG9sZGluZ1RhbmspIHtcclxuICByZXR1cm4gKGVxdWl2YWxlbnRUYW5rICogMC42KSArIE1CQlJUYW5rVm9sdW1lICsgbml0cm9nZW5SZW1vdmFsICsgKHNsdWRnZUhvbGRpbmdUYW5rICogMC42KVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2FsY3VsYXRlRGlmZnVzZXJDb3Vyc2VQaWVjZShlcXVpdmFsZW50VGFuaywgc2x1ZGdlSG9sZGluZ1RhbmspIHtcclxuICByZXR1cm4gKChlcXVpdmFsZW50VGFuayAqIDAuNikgLyAzKSArICgoc2x1ZGdlSG9sZGluZ1RhbmsgKiAwLjYpIC8gMylcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZURpZmZ1c2VyRmluZVBpZWNlKE1CQlJUYW5rVm9sdW1lLCBuaXRyb2dlblJlbW92YWwpIHtcclxuICByZXR1cm4gKE1CQlJUYW5rVm9sdW1lICsgbml0cm9nZW5SZW1vdmFsKSAvIDVcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZU1HRkNhcGFjaXR5KHBsYW50Q2FwYWNpdHkpIHtcclxuICByZXR1cm4gcGxhbnRDYXBhY2l0eSAvICgxNiAqIDEyKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZU1HRkRpYW1ldGVyKG1nZkNhcGFjaXR5KSB7XHJcbiAgcmV0dXJuIE1hdGguc3FydCgobWdmQ2FwYWNpdHkgKiA0KSAvIE1hdGguUEkpICogMTAwMDsgLy8gTXVsdGlwbHkgdGhlIHJlc3VsdCBieSAxMDAwXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZUNhcmJvbkZpbHRlckRpYW1ldGVyKG1nZkNhcGFjaXR5KSB7XHJcbiAgcmV0dXJuIE1hdGguc3FydCgobWdmQ2FwYWNpdHkgKiA0KSAvIE1hdGguUEkpICogMTAwMDsgLy8gTXVsdGlwbHkgdGhlIHJlc3VsdCBieSAxMDAwXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZUZsb3dNZXRlclNpemUod2F0ZXJGbG93UmF0ZSkge1xyXG4gIHJldHVybiBNYXRoLnNxcnQoKHdhdGVyRmxvd1JhdGUgKiA0KSAvICgzNjAwICogMS41ICogMy4xNCkpICogMTAwMFxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGlvblVWU3lzdGVtRmxvd1JhdGUocGxhbnRDYXBhY2l0eSkge1xyXG4gIHJldHVybiBwbGFudENhcGFjaXR5IC8gMjBcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gY2FsY3VsYXRpb25Pem9uYXRvckZsb3dSYXRlKHBsYW50Q2FwYWNpdHkpIHtcclxuICByZXR1cm4gKHBsYW50Q2FwYWNpdHkgKiA1KSAvIDIwXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0aW9uVWx0cmFGaWx0cmF0aW9uU3lzdGVtRmxvd1JhdGUocGxhbnRDYXBhY2l0eSkge1xyXG4gIHJldHVybiBwbGFudENhcGFjaXR5IC8gMjBcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gY2FsY3VsYXRpb25UdWJlRGVja01lZGlhTnVtYmVyKHBsYW50Q2FwYWNpdHkpe3JldHVybiBwbGFudENhcGFjaXR5ICogMjIuNVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVEeW5hbWljQ2FwYWNpdGllcyhwbGFudERhdGEsIGVxdWlwbWVudERhdGEpIHtcclxuICBjb25zdCB1cGRhdGVkRXF1aXBtZW50RGF0YSA9IHsgLi4uZXF1aXBtZW50RGF0YSB9XHJcblxyXG4gIGNvbnN0IGZsb3dSYXRlID0gY2FsY3VsYXRlRmxvd1JhdGUocGxhbnREYXRhLmNhcGFjaXR5KTtcclxuICBjb25zdCBlcXVpdmFsZW50VGFuayA9IGNhbGN1bGF0ZUVxdWl2YWxlbnRUYW5rKGZsb3dSYXRlKTtcclxuICBjb25zdCBNQkJSVGFua1ZvbHVtZSA9IGNhbGN1bGF0ZU1CQlJUYW5rVm9sdW1lKHBsYW50RGF0YS5CT0QsIHBsYW50RGF0YS5jYXBhY2l0eSwgNCk7XHJcbiAgY29uc3Qgbml0cm9nZW5SZW1vdmFsID0gY2FsY3VsYXRlTml0cm9nZW5SZW1vdmFsKHBsYW50RGF0YS5OaXRyb2dlbiwgcGxhbnREYXRhLmNhcGFjaXR5LCA0KTtcclxuICBjb25zdCBzbHVkZ2VIb2xkaW5nVGFuayA9IGNhbGN1bGF0ZVNsdWRnZUhvbGRpbmdUYW5rKHBsYW50RGF0YS5jYXBhY2l0eSwgcGxhbnREYXRhLkJPRCwgcGxhbnREYXRhLlRTUyk7XHJcbiAgY29uc3QgTUJCUk1lZGlhID0gY2FsY3VsYXRlTUJCUk1lZGlhKHBsYW50RGF0YS5CT0QsIHBsYW50RGF0YS5jYXBhY2l0eSk7XHJcbiAgY29uc3QgYmxvd2VyQ2FwYWNpdHkgPSBjYWxjdWxhdGVCbG93ZXJDYXBhY2l0eShlcXVpdmFsZW50VGFuaywgTUJCUlRhbmtWb2x1bWUsIG5pdHJvZ2VuUmVtb3ZhbCwgc2x1ZGdlSG9sZGluZ1RhbmspO1xyXG4gIGNvbnN0IGRpZmZ1c2VyQ291cnNlUGllY2UgPSBjYWxjdWxhdGVEaWZmdXNlckNvdXJzZVBpZWNlKGVxdWl2YWxlbnRUYW5rLCBzbHVkZ2VIb2xkaW5nVGFuayk7XHJcbiAgY29uc3QgZGlmZnVzZXJGaW5lUGllY2UgPSBjYWxjdWxhdGVEaWZmdXNlckZpbmVQaWVjZShNQkJSVGFua1ZvbHVtZSwgbml0cm9nZW5SZW1vdmFsKTtcclxuICBjb25zdCBtZ2ZDYXBhY2l0eSA9IGNhbGN1bGF0ZU1HRkNhcGFjaXR5KHBsYW50RGF0YS5jYXBhY2l0eSk7XHJcbiAgY29uc3QgbWdmRGlhbWV0ZXIgPSBjYWxjdWxhdGVNR0ZEaWFtZXRlcihtZ2ZDYXBhY2l0eSk7IFxyXG4gIGNvbnN0IGNhcmJvbkZpbHRlckRpYW1ldGVyID0gY2FsY3VsYXRlTUdGRGlhbWV0ZXIobWdmQ2FwYWNpdHkpO1xyXG4gIGNvbnN0IFVWU3lzdGVtRmxvdyA9IGNhbGN1bGF0aW9uVVZTeXN0ZW1GbG93UmF0ZShwbGFudERhdGEuY2FwYWNpdHkpO1xyXG4gIGNvbnN0IE96b25hdG9yRmxvdyA9IGNhbGN1bGF0aW9uT3pvbmF0b3JGbG93UmF0ZShwbGFudERhdGEuY2FwYWNpdHkpO1xyXG4gIGNvbnN0IFVsdHJhRmlsdHJhdGlvblN5c3RlbUZsb3cgPSBjYWxjdWxhdGlvblVsdHJhRmlsdHJhdGlvblN5c3RlbUZsb3dSYXRlKHBsYW50RGF0YS5jYXBhY2l0eSk7XHJcbiAgY29uc3QgVHViZURlY2sgPSBjYWxjdWxhdGlvblR1YmVEZWNrTWVkaWFOdW1iZXIocGxhbnREYXRhLmNhcGFjaXR5KTtcclxuICBjb25zdCBmbG93TWV0ZXJTaXplID0gY2FsY3VsYXRlRmxvd01ldGVyU2l6ZShmbG93UmF0ZSk7XHJcblxyXG4gIGlmICh1cGRhdGVkRXF1aXBtZW50RGF0YVtcInJhdy1zZXdhZ2VcIl0pIHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wicmF3LXNld2FnZVwiXS5jYXBhY2l0eSA9IGZsb3dSYXRlXHJcbiAgaWYgKHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wiYmxvd2VyXCJdKSB1cGRhdGVkRXF1aXBtZW50RGF0YVtcImJsb3dlclwiXS5jYXBhY2l0eSA9IGJsb3dlckNhcGFjaXR5XHJcbiAgaWYgKHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wic2x1ZGdlLXB1bXBcIl0pIHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wic2x1ZGdlLXB1bXBcIl0uY2FwYWNpdHkgPSBmbG93UmF0ZVxyXG4gIGlmICh1cGRhdGVkRXF1aXBtZW50RGF0YVtcImZpbHRlci1wdW1wXCJdKSB1cGRhdGVkRXF1aXBtZW50RGF0YVtcImZpbHRlci1wdW1wXCJdLmNhcGFjaXR5ID0gcGxhbnREYXRhLmNhcGFjaXR5IC8gMTZcclxuICBpZiAodXBkYXRlZEVxdWlwbWVudERhdGFbXCJtdWx0aS1ncmFkZS1maWx0ZXJcIl0pdXBkYXRlZEVxdWlwbWVudERhdGFbXCJtdWx0aS1ncmFkZS1maWx0ZXJcIl0uZGlhbWV0ZXIgPSBtZ2ZEaWFtZXRlclxyXG4gIGlmICh1cGRhdGVkRXF1aXBtZW50RGF0YVtcImNhcmJvbi1maWx0ZXJcIl0pIHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wiY2FyYm9uLWZpbHRlclwiXS5kaWFtZXRlciA9IGNhcmJvbkZpbHRlckRpYW1ldGVyXHJcbiAgaWYodXBkYXRlZEVxdWlwbWVudERhdGFbXCJ0dWJlLW1lZGlhXCJdKSB1cGRhdGVkRXF1aXBtZW50RGF0YVtcInR1YmUtbWVkaWFcIl0uY2FwYWNpdHkgPSBUdWJlRGVja1xyXG4gIGlmICh1cGRhdGVkRXF1aXBtZW50RGF0YVtcIm1iYnItbWVkaWFcIl0pIHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wibWJici1tZWRpYVwiXS5Wb2x1bWUgPSBNQkJSTWVkaWFcclxuICBpZiAodXBkYXRlZEVxdWlwbWVudERhdGFbXCJkaWZmdXNlci1jb3Vyc2VcIl0pIHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wiZGlmZnVzZXItY291cnNlXCJdLlBpZWNlID0gZGlmZnVzZXJDb3Vyc2VQaWVjZVxyXG4gIGlmICh1cGRhdGVkRXF1aXBtZW50RGF0YVtcImRpZmZ1c2VyLWZpbmVcIl0pIHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wiZGlmZnVzZXItZmluZVwiXS5QaWVjZSA9IGRpZmZ1c2VyRmluZVBpZWNlXHJcbiAgaWYgKHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wiZmxvdy1tZXRlclwiXSkgdXBkYXRlZEVxdWlwbWVudERhdGFbXCJmbG93LW1ldGVyXCJdLnNpemUgPSBmbG93TWV0ZXJTaXplXHJcbiAgaWYgKHVwZGF0ZWRFcXVpcG1lbnREYXRhW1widXYtc3lzdGVtXCJdKSB1cGRhdGVkRXF1aXBtZW50RGF0YVtcInV2LXN5c3RlbVwiXS5GbG93ID0gVVZTeXN0ZW1GbG93XHJcbiAgaWYgKHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wiT3pvbmF0b3JcIl0pdXBkYXRlZEVxdWlwbWVudERhdGFbXCJPem9uYXRvclwiXS5GbG93ID0gT3pvbmF0b3JGbG93XHJcbiAgaWYgKHVwZGF0ZWRFcXVpcG1lbnREYXRhW1widWx0cmEtZmlsdHJhdGlvblwiXSkgdXBkYXRlZEVxdWlwbWVudERhdGFbXCJ1bHRyYS1maWx0cmF0aW9uXCJdLkZsb3cgPSBVbHRyYUZpbHRyYXRpb25TeXN0ZW1GbG93XHJcbiAgaWYgKHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wicGlwaW5nXCJdKSB1cGRhdGVkRXF1aXBtZW50RGF0YVtcInBpcGluZ1wiXS50b3RhbFByaWNlID0gODAwMDBcclxuICBpZiAodXBkYXRlZEVxdWlwbWVudERhdGFbXCJjYWJsZVwiXSkgdXBkYXRlZEVxdWlwbWVudERhdGFbXCJjYWJsZVwiXS50b3RhbFByaWNlID0gMzUwMDBcclxuICBpZiAodXBkYXRlZEVxdWlwbWVudERhdGFbXCJwYW5lbFwiXSkgdXBkYXRlZEVxdWlwbWVudERhdGFbXCJwYW5lbFwiXS50b3RhbFByaWNlID0gNzAwMDBcclxuICBpZiAodXBkYXRlZEVxdWlwbWVudERhdGFbXCJpbnN0YWxsYXRpb25cIl0pIHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wiaW5zdGFsbGF0aW9uXCJdLnRvdGFsUHJpY2UgPSA0MDAwMFxyXG4gIGlmICh1cGRhdGVkRXF1aXBtZW50RGF0YVtcImNvbW1pc3Npb25pbmdcIl0pIHVwZGF0ZWRFcXVpcG1lbnREYXRhW1wiY29tbWlzc2lvbmluZ1wiXS50b3RhbFByaWNlID0gNzAwMDBcclxuXHJcbiAgT2JqZWN0LmtleXModXBkYXRlZEVxdWlwbWVudERhdGEpLmZvckVhY2goKGtleSkgPT4ge1xyXG4gICAgY29uc3QgZXF1aXBtZW50ID0gdXBkYXRlZEVxdWlwbWVudERhdGFba2V5XTtcclxuICAgIC8vIEluaXRpYWxpemUgdG90YWxQcmljZSB0byB6ZXJvXHJcbiAgICBlcXVpcG1lbnQudG90YWxQcmljZSA9IDA7XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIHRvdGFsIHByaWNlIGJhc2VkIG9uIGNvc3QgZmFjdG9yc1xyXG4gICAgY29uc3QgY2FwYWNpdHlDb3N0ID0gZW5zdXJlTnVtYmVyKGVxdWlwbWVudC5jb3N0UGVyQ2FwYWNpdHkpICogZW5zdXJlTnVtYmVyKGVxdWlwbWVudC5xdWFudGl0eSk7XHJcbiAgICBjb25zdCB2b2x1bWVDb3N0ID0gZW5zdXJlTnVtYmVyKGVxdWlwbWVudC5jb3N0UGVyVm9sdW1lKSAqIGVuc3VyZU51bWJlcihlcXVpcG1lbnQuVm9sdW1lIHx8IDApO1xyXG4gICAgY29uc3QgZmxvd0Nvc3QgPSBlbnN1cmVOdW1iZXIoZXF1aXBtZW50LmNvc3RQZXJGbG93KSAqIGVuc3VyZU51bWJlcihlcXVpcG1lbnQuRmxvdyB8fCAwKTtcclxuICAgIGNvbnN0IHBpZWNlQ29zdCA9IGVuc3VyZU51bWJlcihlcXVpcG1lbnQuY29zdFBlclBpZWNlKSAqIGVuc3VyZU51bWJlcihlcXVpcG1lbnQuUGllY2UgfHwgMCk7XHJcbiAgICBjb25zdCBkaWFtZXRlckNvc3QgPSBlbnN1cmVOdW1iZXIoZXF1aXBtZW50LmNvc3RQZXJEaWFtZXRlcikgKiBlbnN1cmVOdW1iZXIoZXF1aXBtZW50LmRpYW1ldGVyIHx8IDApO1xyXG4gICAgY29uc3Qgc2l6ZUNvc3QgPSBlbnN1cmVOdW1iZXIoZXF1aXBtZW50LmNvc3RQZXJTaXplKSAqIGVuc3VyZU51bWJlcihlcXVpcG1lbnQuc2l6ZSB8fCAwKTtcclxuICAgIGNvbnN0IHF1YW50aXR5Q29zdCA9IGVuc3VyZU51bWJlcihlcXVpcG1lbnQudG90YWxQcmljZSkgKiBlbnN1cmVOdW1iZXIoZXF1aXBtZW50LnF1YW50aXR5IHx8IDApO1xyXG5cclxuICAgIC8vIFN1bSB1cCBhbGwgY29zdHMgdG8gZ2V0IHRoZSB0b3RhbFByaWNlXHJcbiAgICBlcXVpcG1lbnQudG90YWxQcmljZSArPSBjYXBhY2l0eUNvc3QgKyB2b2x1bWVDb3N0ICsgZmxvd0Nvc3QgKyBwaWVjZUNvc3QgKyBkaWFtZXRlckNvc3QgKyBzaXplQ29zdCArIHF1YW50aXR5Q29zdDtcclxuXHJcbiAgICAgIC8vIEFkZCBhZGRpdGlvbmFsIGNvc3RzIGJhc2VkIG9uIHNwZWNpZmljIGNhbGN1bGF0aW9uc1xyXG4gICAgICBpZiAoa2V5ID09PSBcInJhdy1zZXdhZ2VcIikge1xyXG4gICAgICAgIGVxdWlwbWVudC50b3RhbFByaWNlICs9IGZsb3dSYXRlICogZW5zdXJlTnVtYmVyKGVxdWlwbWVudC5jb3N0UGVyQ2FwYWNpdHkpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChrZXkgPT09IFwiYmxvd2VyXCIpIHtcclxuICAgICAgICBlcXVpcG1lbnQudG90YWxQcmljZSArPSBibG93ZXJDYXBhY2l0eSAqIGVuc3VyZU51bWJlcihlcXVpcG1lbnQuY29zdFBlckNhcGFjaXR5KTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoa2V5ID09PSBcInNsdWRnZS1wdW1wXCIpIHtcclxuICAgICAgICBlcXVpcG1lbnQudG90YWxQcmljZSArPSBmbG93UmF0ZSAqIGVuc3VyZU51bWJlcihlcXVpcG1lbnQuY29zdFBlckNhcGFjaXR5KTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoa2V5ID09PSBcImZpbHRlci1wdW1wXCIpIHtcclxuICAgICAgICBlcXVpcG1lbnQudG90YWxQcmljZSArPSAocGxhbnREYXRhLmNhcGFjaXR5IC8gMTYpICogZW5zdXJlTnVtYmVyKGVxdWlwbWVudC5jb3N0UGVyQ2FwYWNpdHkpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChrZXkgPT09IFwibXVsdGktZ3JhZGUtZmlsdGVyXCIpIHtcclxuICAgICAgICBlcXVpcG1lbnQudG90YWxQcmljZSArPSBtZ2ZDYXBhY2l0eSAqIGVuc3VyZU51bWJlcihlcXVpcG1lbnQuY29zdFBlckRpYW1ldGVyKTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoa2V5ID09PSBcIkNhcmJvbiBGaWx0ZXJcIikge1xyXG4gICAgICAgIGVxdWlwbWVudC50b3RhbFByaWNlICs9IG1nZkRpYW1ldGVyICogZW5zdXJlTnVtYmVyKGVxdWlwbWVudC5jb3N0UGVyRGlhbWV0ZXIpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChrZXkgPT09IFwidHViZS1tZWRpYVwiKSB7XHJcbiAgICAgICAgZXF1aXBtZW50LnRvdGFsUHJpY2UgKz0gVHViZURlY2sgKiBlbnN1cmVOdW1iZXIoZXF1aXBtZW50LmNvc3RQZXJDYXBhY2l0eSk7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGtleSA9PT0gXCJtYmJyLW1lZGlhXCIpIHtcclxuICAgICAgICBlcXVpcG1lbnQudG90YWxQcmljZSArPSBNQkJSTWVkaWEgKiBlbnN1cmVOdW1iZXIoZXF1aXBtZW50LmNvc3RQZXJWb2x1bWUpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChrZXkgPT09IFwiZGlmZnVzZXItY291cnNlXCIpIHtcclxuICAgICAgICBlcXVpcG1lbnQudG90YWxQcmljZSArPSBkaWZmdXNlckNvdXJzZVBpZWNlICogZW5zdXJlTnVtYmVyKGVxdWlwbWVudC5jb3N0UGVyUGllY2UpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChrZXkgPT09IFwiZGlmZnVzZXItZmluZVwiKSB7XHJcbiAgICAgICAgZXF1aXBtZW50LnRvdGFsUHJpY2UgKz0gZGlmZnVzZXJGaW5lUGllY2UgKiBlbnN1cmVOdW1iZXIoZXF1aXBtZW50LmNvc3RQZXJQaWVjZSk7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGtleSA9PT0gXCJmbG93LW1ldGVyXCIpIHtcclxuICAgICAgICBlcXVpcG1lbnQudG90YWxQcmljZSArPSBmbG93TWV0ZXJTaXplICogZW5zdXJlTnVtYmVyKGVxdWlwbWVudC5jb3N0UGVyU2l6ZSk7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGtleSA9PT0gXCJ1di1zeXN0ZW1cIikge1xyXG4gICAgICAgIGVxdWlwbWVudC50b3RhbFByaWNlICs9IFVWU3lzdGVtRmxvdyAqIChlcXVpcG1lbnQuY29zdFBlckZsb3cpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChrZXkgPT09IFwiT3pvbmF0b3JcIikge1xyXG4gICAgICAgIGVxdWlwbWVudC50b3RhbFByaWNlICs9IE96b25hdG9yRmxvdyAqIChlcXVpcG1lbnQuY29zdFBlckZsb3cpO1xyXG4gICAgICB9IFxyXG4gICAgICBpZiAoa2V5ID09PSBcInVsdHJhLWZpbHRyYXRpb25cIikge1xyXG4gICAgICAgIGVxdWlwbWVudC50b3RhbFByaWNlICs9IFVsdHJhRmlsdHJhdGlvblN5c3RlbUZsb3cgKiAoZXF1aXBtZW50LmNvc3RQZXJGbG93KTtcclxuICAgICAgaWYgKGtleSA9PT0gXCJwaXBpbmdcIikge1xyXG4gICAgICAgIGVxdWlwbWVudC50b3RhbFByaWNlICs9IDgwMDAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gIH0pO1xyXG4gICAvLyBTYXZlIHVwZGF0ZWQgZXF1aXBtZW50IGRhdGEgdG8gbG9jYWwgc3RvcmFnZVxyXG4gICBzYXZlRXF1aXBtZW50RGF0YSh1cGRhdGVkRXF1aXBtZW50RGF0YSk7XHJcbiAgcmV0dXJuIHVwZGF0ZWRFcXVpcG1lbnREYXRhO1xyXG59XHJcbi8vIEZ1bmN0aW9uIHRvIGluaXRpYWxpemUgdGhlIGRhc2hib2FyZFxyXG5leHBvcnQgZnVuY3Rpb24gaW5pdGlhbGl6ZURhc2hib2FyZCgpIHtcclxuICBjb25zdCBlcXVpcG1lbnREYXRhID0gbG9hZEVxdWlwbWVudERhdGEoKTtcclxuICAvLyBOb3cgdXNlIGVxdWlwbWVudERhdGEgdG8gcG9wdWxhdGUgeW91ciBkYXNoYm9hcmRcclxufVxyXG5cclxuIl0sIm5hbWVzIjpbImVuc3VyZU51bWJlciIsInZhbHVlIiwiaXNOYU4iLCJzYXZlRXF1aXBtZW50RGF0YSIsImVxdWlwbWVudERhdGEiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiSlNPTiIsInN0cmluZ2lmeSIsImxvYWRFcXVpcG1lbnREYXRhIiwiZGF0YSIsImdldEl0ZW0iLCJwYXJzZSIsImNhbGN1bGF0ZVRvdGFsQ29zdCIsIk9iamVjdCIsInZhbHVlcyIsInJlZHVjZSIsInRvdGFsIiwiZXF1aXBtZW50IiwidG90YWxQcmljZSIsImNhbGN1bGF0ZUZsb3dSYXRlIiwicGxhbnRDYXBhY2l0eSIsImNhbGN1bGF0ZUVxdWl2YWxlbnRUYW5rIiwiZmxvd1JhdGUiLCJjYWxjdWxhdGVNQkJSVGFua1ZvbHVtZSIsIkJPRCIsImRlcHRoIiwiY2FsY3VsYXRlTml0cm9nZW5SZW1vdmFsIiwiTml0cm9nZW4iLCJjYWxjdWxhdGVTbHVkZ2VIb2xkaW5nVGFuayIsIlRTUyIsInNsdWRnZUhvbGRlciIsImNhbGN1bGF0ZU1CQlJNZWRpYSIsImNhbGN1bGF0ZUJsb3dlckNhcGFjaXR5IiwiZXF1aXZhbGVudFRhbmsiLCJNQkJSVGFua1ZvbHVtZSIsIm5pdHJvZ2VuUmVtb3ZhbCIsInNsdWRnZUhvbGRpbmdUYW5rIiwiY2FsY3VsYXRlRGlmZnVzZXJDb3Vyc2VQaWVjZSIsImNhbGN1bGF0ZURpZmZ1c2VyRmluZVBpZWNlIiwiY2FsY3VsYXRlTUdGQ2FwYWNpdHkiLCJjYWxjdWxhdGVNR0ZEaWFtZXRlciIsIm1nZkNhcGFjaXR5IiwiTWF0aCIsInNxcnQiLCJQSSIsImNhbGN1bGF0ZUNhcmJvbkZpbHRlckRpYW1ldGVyIiwiY2FsY3VsYXRlRmxvd01ldGVyU2l6ZSIsIndhdGVyRmxvd1JhdGUiLCJjYWxjdWxhdGlvblVWU3lzdGVtRmxvd1JhdGUiLCJjYWxjdWxhdGlvbk96b25hdG9yRmxvd1JhdGUiLCJjYWxjdWxhdGlvblVsdHJhRmlsdHJhdGlvblN5c3RlbUZsb3dSYXRlIiwiY2FsY3VsYXRpb25UdWJlRGVja01lZGlhTnVtYmVyIiwidXBkYXRlRHluYW1pY0NhcGFjaXRpZXMiLCJwbGFudERhdGEiLCJ1cGRhdGVkRXF1aXBtZW50RGF0YSIsImNhcGFjaXR5IiwiTUJCUk1lZGlhIiwiYmxvd2VyQ2FwYWNpdHkiLCJkaWZmdXNlckNvdXJzZVBpZWNlIiwiZGlmZnVzZXJGaW5lUGllY2UiLCJtZ2ZEaWFtZXRlciIsImNhcmJvbkZpbHRlckRpYW1ldGVyIiwiVVZTeXN0ZW1GbG93IiwiT3pvbmF0b3JGbG93IiwiVWx0cmFGaWx0cmF0aW9uU3lzdGVtRmxvdyIsIlR1YmVEZWNrIiwiZmxvd01ldGVyU2l6ZSIsImRpYW1ldGVyIiwiVm9sdW1lIiwiUGllY2UiLCJzaXplIiwiRmxvdyIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwiY2FwYWNpdHlDb3N0IiwiY29zdFBlckNhcGFjaXR5IiwicXVhbnRpdHkiLCJ2b2x1bWVDb3N0IiwiY29zdFBlclZvbHVtZSIsImZsb3dDb3N0IiwiY29zdFBlckZsb3ciLCJwaWVjZUNvc3QiLCJjb3N0UGVyUGllY2UiLCJkaWFtZXRlckNvc3QiLCJjb3N0UGVyRGlhbWV0ZXIiLCJzaXplQ29zdCIsImNvc3RQZXJTaXplIiwicXVhbnRpdHlDb3N0IiwiaW5pdGlhbGl6ZURhc2hib2FyZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/calculations.js\n"));

/***/ })

});