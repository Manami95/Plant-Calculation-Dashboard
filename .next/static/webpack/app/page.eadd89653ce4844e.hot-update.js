"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/calculations.js":
/*!***********************************!*\
  !*** ./src/utils/calculations.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateBlowerCapacity: function() { return /* binding */ calculateBlowerCapacity; },\n/* harmony export */   calculateDiffuserCourseCapacity: function() { return /* binding */ calculateDiffuserCourseCapacity; },\n/* harmony export */   calculateDiffuserFineCapacity: function() { return /* binding */ calculateDiffuserFineCapacity; },\n/* harmony export */   calculateEquivalentTank: function() { return /* binding */ calculateEquivalentTank; },\n/* harmony export */   calculateFlowMeterSize: function() { return /* binding */ calculateFlowMeterSize; },\n/* harmony export */   calculateFlowRate: function() { return /* binding */ calculateFlowRate; },\n/* harmony export */   calculateMBBRMedia: function() { return /* binding */ calculateMBBRMedia; },\n/* harmony export */   calculateMBBRTankVolume: function() { return /* binding */ calculateMBBRTankVolume; },\n/* harmony export */   calculateMGFDiameter: function() { return /* binding */ calculateMGFDiameter; },\n/* harmony export */   calculateNitrogenRemoval: function() { return /* binding */ calculateNitrogenRemoval; },\n/* harmony export */   calculateSludgeHoldingTank: function() { return /* binding */ calculateSludgeHoldingTank; },\n/* harmony export */   calculateTotalCost: function() { return /* binding */ calculateTotalCost; },\n/* harmony export */   calculationOzonatorFlowRate: function() { return /* binding */ calculationOzonatorFlowRate; },\n/* harmony export */   calculationTubeDeckMediaNumber: function() { return /* binding */ calculationTubeDeckMediaNumber; },\n/* harmony export */   calculationUVSystemFlowRate: function() { return /* binding */ calculationUVSystemFlowRate; },\n/* harmony export */   calculationUltraFiltrationSystemFlowRate: function() { return /* binding */ calculationUltraFiltrationSystemFlowRate; },\n/* harmony export */   updateDynamicCapacities: function() { return /* binding */ updateDynamicCapacities; }\n/* harmony export */ });\n// Helper function to ensure a number is not NaN, replacing with 0 if it is\nconst ensureNumber = (value)=>isNaN(value) ? 0 : value;\nfunction calculateTotalCost(equipmentData) {\n    return Object.values(equipmentData).reduce((total, equipment)=>total + equipment.totalPrice, 0);\n}\nfunction calculateFlowRate(plantCapacity) {\n    return plantCapacity / 20;\n}\nfunction calculateEquivalentTank(flowRate) {\n    return flowRate * 8;\n}\nfunction calculateMBBRTankVolume(BOD, plantCapacity) {\n    let depth = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 4;\n    return BOD / 1000 * plantCapacity * 2.5 / 0.89;\n}\nfunction calculateNitrogenRemoval(Nitrogen, plantCapacity) {\n    let depth = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 4;\n    return Nitrogen / 1000 * plantCapacity * 4.3 / 0.89;\n}\nfunction calculateSludgeHoldingTank(plantCapacity, BOD, TSS) {\n    const sludgeHolder = plantCapacity * (BOD * 0.15 + TSS * 0.6) / 100000;\n    return sludgeHolder * 4;\n}\nfunction calculateMBBRMedia(BOD, plantCapacity) {\n    return BOD * plantCapacity / 4000;\n}\nfunction calculateBlowerCapacity(equivalentTank, MBBRTankVolume, nitrogenRemoval, sludgeHoldingTank) {\n    return equivalentTank * 0.6 + MBBRTankVolume + nitrogenRemoval + sludgeHoldingTank * 0.6;\n}\nfunction calculateDiffuserCourseCapacity(equivalentTank, sludgeHoldingTank) {\n    return equivalentTank * 0.6 / 3 + sludgeHoldingTank * 0.6 / 3;\n}\nfunction calculateDiffuserFineCapacity(MBBRTankVolume, nitrogenRemoval) {\n    return (MBBRTankVolume + nitrogenRemoval) / 5;\n}\nfunction calculateMGFDiameter(plantCapacity) {\n    const mgfCapacity = plantCapacity / (16 * 12);\n    return Math.sqrt(mgfCapacity * 4 / 3.14) * 1000;\n}\nfunction calculateFlowMeterSize(waterFlowRate) {\n    return Math.sqrt(waterFlowRate * 4 / (3600 * 1.5 * 3.14)) * 1000;\n}\nfunction calculationUVSystemFlowRate(plantCapacity) {\n    return plantCapacity / 20;\n}\nfunction calculationOzonatorFlowRate(plantCapacity) {\n    return plantCapacity * 5 / 20;\n}\nfunction calculationUltraFiltrationSystemFlowRate(plantCapacity) {\n    return plantCapacity / 20;\n}\nfunction calculationTubeDeckMediaNumber(plantCapacity) {\n    return plantCapacity * 22.5;\n}\nfunction updateDynamicCapacities(plantData, equipmentData) {\n    const updatedEquipmentData = {\n        ...equipmentData\n    };\n    const flowRate = calculateFlowRate(plantData.capacity);\n    const equivalentTank = calculateEquivalentTank(flowRate);\n    const MBBRTankVolume = calculateMBBRTankVolume(plantData.BOD, plantData.capacity, 4);\n    const nitrogenRemoval = calculateNitrogenRemoval(plantData.Nitrogen, plantData.capacity, 4);\n    const sludgeHoldingTank = calculateSludgeHoldingTank(plantData.capacity, plantData.BOD, plantData.TSS);\n    const MBBRMedia = calculateMBBRMedia(plantData.BOD, plantData.capacity);\n    const blowerCapacity = calculateBlowerCapacity(equivalentTank, MBBRTankVolume, nitrogenRemoval, sludgeHoldingTank);\n    const diffuserCourseCapacity = calculateDiffuserCourseCapacity(equivalentTank, sludgeHoldingTank);\n    const diffuserFineCapacity = calculateDiffuserFineCapacity(MBBRTankVolume, nitrogenRemoval);\n    const mgfCapacity = calculateMGFCapacity(plantData.capacity);\n    const mgfDiameter = calculateMGFDiameter(mgfCapacity);\n    const flowMeterSize = calculateFlowMeterSize(flowRate);\n    if (updatedEquipmentData[\"raw-sewage\"]) updatedEquipmentData[\"raw-sewage\"].capacity = flowRate;\n    if (updatedEquipmentData[\"sludge-pump\"]) updatedEquipmentData[\"sludge-pump\"].capacity = flowRate;\n    if (updatedEquipmentData[\"filter-pump\"]) updatedEquipmentData[\"filter-pump\"].capacity = plantData.capacity / 16;\n    if (updatedEquipmentData.blower) updatedEquipmentData.blower.capacity = blowerCapacity;\n    if (updatedEquipmentData[\"mbbr-media\"]) updatedEquipmentData[\"mbbr-media\"].Volume = MBBRMedia;\n    if (updatedEquipmentData[\"diffuser-course\"]) updatedEquipmentData[\"diffuser-course\"].capacity = diffuserCourseCapacity;\n    if (updatedEquipmentData[\"diffuser-fine\"]) updatedEquipmentData[\"diffuser-fine\"].capacity = diffuserFineCapacity;\n    if (updatedEquipmentData[\"multi-grade-filter\"]) updatedEquipmentData[\"multi-grade-filter\"].diameter = mgfDiameter;\n    if (updatedEquipmentData[\"flow-meter\"]) updatedEquipmentData[\"flow-meter\"].size = flowMeterSize;\n    Object.keys(updatedEquipmentData).forEach((key)=>{\n        const equipment = updatedEquipmentData[key];\n        if (equipment.capacity !== undefined) {\n            equipment.totalPrice = Math.max(ensureNumber(equipment.capacity), 1) * equipment.costPerCapacity * equipment.quantity;\n        } else {\n            equipment.totalPrice = equipment.costPerCapacity * equipment.quantity * plantData.capacity;\n        }\n    });\n    return updatedEquipmentData;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/calculations.js\n"));

/***/ })

});